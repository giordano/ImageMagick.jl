using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libtiff"], :libtiff),
    LibraryProduct(prefix, ["libtiffxx"], :libtiffxx),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/giordano/LibTIFFBuilder/releases/download/test"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/libtiff.v4.0.9.aarch64-linux-gnu.tar.gz", "43f54140bd60f1bc87bc5868bfa1a3b2abd941020bfa524bfd15777e402ab9c1"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/libtiff.v4.0.9.aarch64-linux-musl.tar.gz", "a4c24489d994805c817eb35ac498bef653f16c98907b751f5d2e7da5283ee554"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/libtiff.v4.0.9.arm-linux-gnueabihf.tar.gz", "cb7ed43ee520d7b22a7d99641c66c662ae36442726d803415a0bb4cd7e48b6ca"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/libtiff.v4.0.9.arm-linux-musleabihf.tar.gz", "9a2f2a5f4a842d4c88615fdf39dbf84bbf363336b72e82a4457ef25935a6e62a"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/libtiff.v4.0.9.i686-linux-gnu.tar.gz", "53aeb344af9d050e3103eec3a0326fb33fa6d0f70f7c474681bbe8a6ae157e60"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/libtiff.v4.0.9.i686-linux-musl.tar.gz", "9a6aedab4fc93dd8a5b3c1c6b4187b792c6c286ffefb357f789e1dc537d86000"),
    Windows(:i686) => ("$bin_prefix/libtiff.v4.0.9.i686-w64-mingw32.tar.gz", "0c37043ffe25f142f1a262b75ad01bda401c9a0da41901da5252ba4f677188ce"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/libtiff.v4.0.9.powerpc64le-linux-gnu.tar.gz", "3f82c168d8907dcdbe4501552d0a4b88571e091fa51299bd79c4dbdcea22b4fa"),
    MacOS(:x86_64) => ("$bin_prefix/libtiff.v4.0.9.x86_64-apple-darwin14.tar.gz", "97aa44a5b93bfaefa1351e6b930a11a3ea4db16d182d6529a2783870a210700b"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/libtiff.v4.0.9.x86_64-linux-gnu.tar.gz", "f09984ae52af604f5070f3037badef72d64de31dc9b2feca875826707a158a05"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/libtiff.v4.0.9.x86_64-linux-musl.tar.gz", "661221d181596f8132ca18d0770abae325d6e8b01c6d535f7d97bc25553eff14"),
    FreeBSD(:x86_64) => ("$bin_prefix/libtiff.v4.0.9.x86_64-unknown-freebsd11.1.tar.gz", "8e4fb3f0ca358cc0cce570098d259bdcdac47b4997e5af60f0860fa2181bb529"),
    Windows(:x86_64) => ("$bin_prefix/libtiff.v4.0.9.x86_64-w64-mingw32.tar.gz", "bca93c952b7b957737b330be16fb9596e1f8e24e754bc49251a2dd7cee6f5c37"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
